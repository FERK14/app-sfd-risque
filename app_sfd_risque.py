import streamlit as st
import pandas as pd
import requests
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
from docx import Document

st.set_page_config(page_title="Supervision IA - Rapport FLAN-T5", layout="wide")

# Charger les donn√©es
df = pd.read_excel("donnees_SFD_simulees.xlsx")

# Pr√©parer les donn√©es pour le mod√®le
X = df.drop(columns=['En_risque'])
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Entra√Æner le mod√®le Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_scaled, df['En_risque'])
df['Prediction_IA'] = model.predict(X_scaled)
df['Probabilit√©_Risque'] = model.predict_proba(X_scaled)[:, 1]

# D√©finir la fonction de g√©n√©ration de texte via Hugging Face FLAN-T5
API_URL = "https://api-inference.huggingface.co/models/google/flan-t5-base"
headers = {"Authorization": "Bearer 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"}

def rediger_commentaire_sfd_flan(row):
    prompt = f"""
R√©dige un rapport professionnel de 150 mots sur cette institution financi√®re :

Encours de cr√©dit : {row['Encours_credits']:,} FCFA
Taux de cr√©ances douteuses : {row['Creances_douteuses']:.2f} %
Ratio de liquidit√© : {row['Ratio_liquidite']:.2f} %
Ratio de solvabilit√© : {row['Ratio_solvabilite']:.2f} %
Nombre d'agences : {int(row['Nb_agences'])}
Rendement des actifs : {row['Rendement_actifs']:.2f} %
Score IA (risque) : {row['Probabilit√©_Risque']:.2%}

Analyse les forces et faiblesses de cette institution et propose une recommandation claire pour les superviseurs.
"""
    payload = {
        "inputs": prompt,
        "parameters": {"max_new_tokens": 300, "temperature": 0.7}
    }
    try:
        response = requests.post(API_URL, headers=headers, json=payload, timeout=60)
        response.raise_for_status()
        return response.json()[0]['generated_text'].strip()
    except Exception as e:
        return f"Erreur lors de la g√©n√©ration du texte : {e}"

# Titre de l'application
st.title("üìä Supervision des SFD - IA & Rapport FLAN-T5")

# SECTION 1 : Analyse individuelle
st.header("üîç Analyse d‚Äôun SFD")
sfd_index = st.selectbox("S√©lectionnez un SFD", df.index)
sfd_data = df.loc[sfd_index]

st.subheader("üìå Indicateurs financiers")
col1, col2, col3 = st.columns(3)
col1.metric("Encours cr√©dits (FCFA)", f"{sfd_data['Encours_credits']:,}")
col2.metric("Cr√©ances douteuses (%)", f"{sfd_data['Creances_douteuses']:.2f}")
col3.metric("Ratio liquidit√© (%)", f"{sfd_data['Ratio_liquidite']:.2f}")

col4, col5, col6 = st.columns(3)
col4.metric("Solvabilit√© (%)", f"{sfd_data['Ratio_solvabilite']:.2f}")
col5.metric("Agences", int(sfd_data['Nb_agences']))
col6.metric("Rendement actifs (%)", f"{sfd_data['Rendement_actifs']:.2f}")

st.subheader("üß† Pr√©diction IA")
proba = sfd_data['Probabilit√©_Risque']
if sfd_data['Prediction_IA'] == 1:
    st.error(f"‚ö†Ô∏è Risque d√©tect√© (probabilit√© : {proba:.2%})")
else:
    st.success(f"‚úÖ Pas de risque d√©tect√© (probabilit√© : {proba:.2%})")

st.subheader("üìà Ratio de liquidit√© - Vue comparative")
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(x=df['Ratio_liquidite'], y=df.index, orient='h', ax=ax, palette="coolwarm")
ax.axvline(x=100, color='red', linestyle='--')
ax.set_xlabel("Ratio de liquidit√© (%)")
ax.set_ylabel("SFD")
st.pyplot(fig)

# SECTION 2 : Rapport r√©dig√© avec FLAN-T5
st.header("üìù Rapport Word - Top 10 SFD √† risque")

if st.button("G√©n√©rer le rapport avec FLAN-T5"):
    top_10 = df.sort_values(by='Probabilit√©_Risque', ascending=False).head(10)
    doc = Document()
    doc.add_heading('Rapport de supervision - Top 10 SFD √† risque', 0)

    with st.spinner("‚è≥ R√©daction des commentaires par le mod√®le IA..."):
        for idx, row in top_10.iterrows():
            commentaire = rediger_commentaire_sfd_flan(row)
            doc.add_heading(f"SFD {idx+1}", level=1)
            doc.add_paragraph(f"Encours : {row['Encours_credits']:,} FCFA")
            doc.add_paragraph(f"Score IA (risque) : {row['Probabilit√©_Risque']:.2%}")
            doc.add_paragraph("üìù Commentaire g√©n√©r√© par FLAN-T5 :")
            doc.add_paragraph(commentaire)

    rapport_path = "rapport_top_10_flan.docx"
    doc.save(rapport_path)

    with open(rapport_path, "rb") as f:
        st.download_button("üì• T√©l√©charger le rapport Word", f, file_name=rapport_path)
